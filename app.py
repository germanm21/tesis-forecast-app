import streamlit as st
import pandas as pd
import time
import openai
import os
from dotenv import load_dotenv
load_dotenv()


openai.api_key = os.getenv("OPENAI_API_KEY")


st.set_page_config(page_title="Forecast App", layout="centered")

st.title("üìà Forecast con Amazon Chronos + GPT")
st.markdown("Sub√≠ tu CSV, explic√° qu√© significan los datos, y obten√© un an√°lisis autom√°tico.")

uploaded_file = st.file_uploader("üìÇ Sub√≠ tu archivo CSV", type=["csv"])
description = st.text_area("üìù Explicaci√≥n o contexto de los datos (opcional)")

if uploaded_file is not None:
    df = pd.read_csv(uploaded_file)
    st.write("üìä Vista previa de los datos:")
    st.dataframe(df)

    if st.button("üöÄ Analizar con Chronos + GPT (simulado)"):
        with st.spinner("Procesando datos con Chronos..."):
            time.sleep(2)  # Simula tiempo de procesamiento
            forecast_result = {
                "item": "Ventas",
                "predicci√≥n pr√≥ximos 5 d√≠as": [102, 108, 115, 112, 119]
            }

        st.success("‚úÖ An√°lisis completado.")
        st.subheader("üîÆ Resultados de la predicci√≥n")
        st.json(forecast_result)

        st.subheader("üß† Explicaci√≥n generada con ChatGPT")

        # Armamos el prompt
        prompt = f"""
        Estos son los resultados de una predicci√≥n de series temporales: {forecast_result}
        El usuario proporcion√≥ esta descripci√≥n del contexto: "{description}"

        Explic√° en lenguaje natural qu√© significan los resultados, si hay alguna tendencia o patr√≥n, y qu√© puede concluir una persona que no sabe de ciencia de datos.
        """

        try:
            response = openai.ChatCompletion.create(
                model="gpt-4",  # o "gpt-3.5-turbo" si ten√©s acceso limitado
                messages=[
                    {"role": "system", "content": "Sos un analista experto en series temporales."},
                    {"role": "user", "content": prompt}
                ],
                temperature=0.7
            )

            explanation = response["choices"][0]["message"]["content"]
            st.write(explanation)

        except Exception as e:
            st.error("Error al conectarse con OpenAI:")
            st.error(e)